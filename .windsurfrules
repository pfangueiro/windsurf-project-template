# ────────────────────────────────
# File: .windsurfrules (Updated Version)
# ────────────────────────────────
loader:
  rules:
    - global-rules.yaml
    - local-rules.yaml
  agents:
    - agent: BA
      instructions: agents/analyst.md
      knowledge:
        - templates/project-brief.md
      triggers:
        - feature description
        - user requirements
        - business value
        - market analysis

    - agent: PM
      instructions: agents/pm-agent.md
      knowledge:
        - templates/prd.md
        - templates/epicN.md
        - templates/pm-checklist.md
        - templates/ui-ux-spec.md
        - artifacts/briefs/project-brief.md
      triggers:
        - timelines
        - dependencies
        - resource allocation
        - risk management

    - agent: Architect
      instructions: agents/architect-agent.md
      knowledge:
        - templates/architect-checklist.md
        - templates/architecture-templates.md
        - artifacts/architecture/architecture.md
        - artifacts/architecture/tech-stack.md
      triggers:
        - technical feasibility
        - design patterns
        - architecture impact
        - technical debt

    - agent: PO
      instructions: agents/sm-agent.md
      knowledge:
        - templates/story-template.md
        - templates/po-checklist.md
        - templates/story-draft-checklist.md
        - artifacts/requirements/prd.md
        - artifacts/requirements/epicN.md
        - artifacts/architecture/architecture.md
        - docs/api-reference.md
        - docs/data-models.md
        - docs/coding-standards.md
        - docs/environment-vars.md
        - docs/testing-strategy.md
        - docs/project-structure.md
        - docs/ui-ux-spec.md
      triggers:
        - feature priority
        - acceptance criteria
        - user stories
        - value proposition

    - agent: ScrumMaster
      instructions: agents/sm-agent.md
      knowledge:
        - templates/story-template.md
        - templates/po-checklist.md
        - templates/story-draft-checklist.md
        - docs/project-structure.md
      triggers:
        - sprint planning
        - impediment removal
        - team facilitation
        - process improvement

    - agent: Developer
      instructions: agents/dev-agent.md
      knowledge:
        - artifacts/requirements/prd.md
        - artifacts/architecture/architecture.md
        - docs/api-reference.md
        - artifacts/stories/*
        - docs/coding-standards.md
        - docs/data-models.md
        - docs/environment-vars.md
        - docs/testing-strategy.md
      triggers:
        - implementation approach
        - coding standards
        - technical constraints
        - refactoring needs

    - agent: Docs
      instructions: agents/docs-agent.md
      knowledge:
        - docs/api-reference.md
        - templates/story-template.md
        - templates/story-draft-checklist.md
        - docs/ui-ux-spec.md
      triggers:
        - documentation needs
        - api changes
        - user-facing content
        - technical documentation

    - agent: QA
      instructions: agents/qa-agent.md
      knowledge:
        - docs/testing-strategy.md
        - artifacts/requirements/prd.md
        - artifacts/stories/*
        - docs/api-reference.md
        - templates/story-template.md
        - docs/coding-standards.md
      triggers:
        - testability
        - test plans
        - quality risks
        - regression impacts

# Cross-functional teams
teams:
  requirement_analysis:
    members: [BA, PO, Architect]
    activities: [feature analysis, requirements gathering, feasibility assessment]
  
  technical_planning:
    members: [Architect, Developer, QA]
    activities: [technical design, implementation planning, test strategy]
  
  implementation:
    members: [Developer, Architect, QA]
    activities: [code development, code review, unit testing]
  
  quality_assurance:
    members: [QA, Developer, BA]
    activities: [test execution, bug verification, acceptance testing]
  
  documentation:
    members: [Docs, Developer, PO]
    activities: [api documentation, user guides, technical documentation]

# Project structure enforced by the loader
filesystem:
  enforce:
    - templates/
    - agents/
    - memory-bank/
    - docs/
    - ai/stories/
    - ai/epics/
    - code/
    - logs/
    - artifacts/
    - .windsurfrules
    - codebase_sync.sh
    - codebase_snapshot.md
    - code_links.md
    - document-manifest.md

# Development standards and practices
coding_standards:
  enforce_placeholder_editing: true
  auto_linting: true
  auto_formatting: true
  testing_required_before_commit: true

memory_bank_practices:
  session_tagging: true
  compact_summaries: true
  always_link_code_to-decisions: true

agile_sync:
  daily_focus_update: true
  story_tracking: true
  sprint_end_review_trigger: true

# Task management practices
task_management:
  workflow:
    creation:
      - "Create task with clear scope, measurable goals and acceptance criteria"
      - "Estimate task duration (aim for 2 hours max per task)"
      - "Identify dependencies and prerequisites"
      - "Assign to appropriate agent(s)"
    execution:
      - "Update activeContext.md with current task focus"
      - "Follow defined process for implementation"
      - "Document progress in real-time"
      - "Report blockers immediately"
    review:
      - "Self-review by implementing agent"
      - "Cross-review by another relevant agent"
      - "Verify against acceptance criteria"
    completion:
      - "Document completion in progress.md"
      - "Update any relevant documentation"
      - "Capture decisions in decisionLog.md"
      - "Update memory bank with UMB command"
  documentation:
    task_format:
      - "Title: Clear, concise description"
      - "Agent: Responsible agent(s)"
      - "Deadline: Expected completion timeframe"
      - "Dependencies: Related tasks or prerequisites"
      - "Acceptance: Measurable criteria for completion"
      - "Artifacts: Expected deliverables"
    progress_update:
      format: "[YYYY-MM-DD HH:MM:SS] - [Task ID] - [Status] - [Description]"
      statuses: ["Started", "In Progress", "Blocked", "Completed", "Deferred"]

mcp_usage:
  always_log_server_context: true
  auto-switch-servers-on-failure: true